{"ast":null,"code":"var _jsxFileName = \"/Users/marinebordenave/Documents/Cours/WebSecureDevelopment/frontend/src/components/FormulaireInscription/FormulaireInscription.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { sendUser } from \"../../services/api\";\nimport \"./FormulaireInscription.css\";\n\n//Function to handle user registration and validation\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FormulaireInscription() {\n  _s();\n  const [popup, setPopup] = useState(\"\");\n  const [pseudo, setPseudo] = useState(\"\");\n  const [pseudoError, setPseudoError] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [passwordConfirmError, setPasswordConfirmError] = useState(\"\");\n  const [passwordSuccess, setPasswordSuccess] = useState(\"\");\n  const [mail, setMail] = useState(\"\");\n  const [mailError, setMailError] = useState(\"\");\n  const [submitError, setSubmitError] = useState(\"\");\n\n  //Function to reset all components\n  function resetAll() {\n    setPseudo(\"\");\n    setPassword(\"\");\n    setMail(\"\");\n    setPasswordConfirm(\"\");\n    setPasswordSuccess(\"\");\n  }\n\n  //Function to handle username changes\n  function handleChangePseudo(event) {\n    setPseudo(event.target.value);\n    checkPseudo(event.target.value);\n  }\n\n  //Function to handle password changes\n  function handleChangePassword(event) {\n    setPassword(event.target.value);\n    checkPassword(event.target.value);\n  }\n\n  //Function to handle password confirmation changes\n  function handleChangePasswordConfirm(event) {\n    setPasswordConfirm(event.target.value);\n    checkPasswordConfirm(event.target.value);\n  }\n\n  //Function to handle email changes\n  function handleChangeMail(event) {\n    setMail(event.target.value);\n    checkMail(event.target.value);\n  }\n\n  //Check if username is longer than 5 characters\n  const checkPseudo = value => {\n    if (value.length < 5) {\n      setPseudoError(\"Username must be longer than 5 characters.\");\n    } else {\n      setPseudoError(\"\");\n    }\n  };\n\n  //Check if password is long enough and contains at least one uppercase letter and one number\n  const checkPassword = value => {\n    let error = \"Password must contain:\\n\";\n    setPasswordSuccess(\"\");\n    // To check if the string contains at least one uppercase letter, we convert it to lowercase. If the string hasn't changed, it didn't contain any uppercase letters.\n    let maj = value.toLowerCase() != value;\n    // To check if the string contains at least one lowercase letter, we convert it to uppercase. If the string hasn't changed, it didn't contain any lowercase letters.\n    let min = value.toUpperCase() != value;\n    // To check if the string contains at least one number, we iterate through the string and try to convert each character to an integer. If parseInt() returns NaN (Not a Number), then it's not a digit.\n    let num = false;\n    for (let i = 0; i < value.length; i++) {\n      if (!isNaN(parseInt(value[i]))) num = true;\n    }\n    // To check if the string contains at least one special character, we create a string containing all the special characters we want to check. We then iterate through our password and check if each character is in the special characters string.\n    let caracters = \"!@#$%^&*()_+-=[]{}|;:,.<>?\";\n    let car = false;\n    for (let i = 0; i < value.length; i++) {\n      if (caracters.includes(value[i])) car = true;\n    }\n\n    //If password is less than 9 characters\n    if (value.length < 9) {\n      error += \"-more than 9 characters\\n\";\n    } else {\n      setPasswordError(\"\");\n    }\n    //If password doesn't contain a lowercase letter\n    if (!min) {\n      error += \"-at least one lowercase letter\\n\";\n    } else {\n      setPasswordError(\"\");\n    }\n    //If password doesn't contain an uppercase letter\n    if (!maj) {\n      error += \"-at least one uppercase letter\\n\";\n    } else {\n      setPasswordError(\"\");\n    }\n    //If password doesn't contain at least one number\n    if (!num) {\n      error += \"-at least one number\\n\";\n    } else {\n      setPasswordError(\"\");\n    }\n    //If password doesn't contain at least one special character\n    if (!car) {\n      error += \"-at least one special character\\n\";\n    } else {\n      setPasswordError(\"\");\n    }\n    //If all conditions are met, we update the password\n    if (maj == true && min == true && num == true && car == true) {\n      setPasswordSuccess(\"Strong password\");\n      return setPasswordError(\"\");\n    }\n    //Otherwise, we return the error\n    return setPasswordError(error);\n  };\n\n  //Check if the confirmation password matches the original password\n  const checkPasswordConfirm = value => {\n    if (value !== password) {\n      setPasswordConfirmError(\"The entered passwords do not match.\");\n    } else {\n      setPasswordConfirmError(\"\");\n    }\n  };\n\n  //Check if the email is valid\n  const checkMail = value => {\n    if (value.length < 5 || !value.includes(\"@\")) {\n      setMailError(\"The email address is not valid.\");\n    } else {\n      setMailError(\"\");\n    }\n  };\n\n  //Register the user\n  function handleInscription() {\n    //If there are no errors\n    if (!mailError && !passwordConfirmError && !passwordError && !pseudoError) {\n      setSubmitError(\"\"); // Reset submission error\n      // Send user data\n      sendUser(mail, password);\n      //Show a popup to indicate successful registration\n      setPopup(true);\n      //Reset sent values\n      resetAll();\n    }\n    //If there are errors, display a message asking to correct them\n    else {\n      setSubmitError(\"Please correct the errors before submitting the form.\");\n      if (!pseudo) {\n        setPseudoError(\"Username is required.\");\n      }\n      if (!password) {\n        setPasswordError(\"Password is required.\");\n      }\n      if (!passwordConfirm) {\n        setPasswordConfirmError(\"Password confirmation is required.\");\n      }\n      if (!mail) {\n        setMailError(\"Email address is required.\");\n      }\n    }\n  }\n\n  //Close the popup\n  const closePopup = () => {\n    setPopup(false);\n  };\n\n  //Display a form where users can enter their username, password, password confirmation, and email address\n  //along with a submit button\n  //Also includes a popup that appears when the user is successfully registered\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forminscr\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"pseudo\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"pseudo\",\n        onChange: handleChangePseudo,\n        value: pseudo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error\",\n        children: pseudoError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"\",\n        onChange: handleChangePassword,\n        value: password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error\",\n        children: passwordError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"valid\",\n        children: passwordSuccess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"re-password\",\n        children: \"Confirm Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"re-password\",\n        onChange: handleChangePasswordConfirm,\n        value: passwordConfirm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error\",\n        children: passwordConfirmError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"mail\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"mail\",\n        onChange: handleChangeMail,\n        value: mail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error\",\n        children: mailError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"error\",\n      children: submitError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleInscription,\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), popup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-bg active\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popupDelete\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You are now registered\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-annuler\",\n          onClick: () => closePopup(),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n}\n_s(FormulaireInscription, \"ZiCy2H7qW6jmSzvdt9pOaQWWt1w=\");\n_c = FormulaireInscription;\nexport default FormulaireInscription;\nvar _c;\n$RefreshReg$(_c, \"FormulaireInscription\");","map":{"version":3,"names":["React","useState","sendUser","jsxDEV","_jsxDEV","FormulaireInscription","_s","popup","setPopup","pseudo","setPseudo","pseudoError","setPseudoError","password","setPassword","passwordConfirm","setPasswordConfirm","passwordError","setPasswordError","passwordConfirmError","setPasswordConfirmError","passwordSuccess","setPasswordSuccess","mail","setMail","mailError","setMailError","submitError","setSubmitError","resetAll","handleChangePseudo","event","target","value","checkPseudo","handleChangePassword","checkPassword","handleChangePasswordConfirm","checkPasswordConfirm","handleChangeMail","checkMail","length","error","maj","toLowerCase","min","toUpperCase","num","i","isNaN","parseInt","caracters","car","includes","handleInscription","closePopup","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/marinebordenave/Documents/Cours/WebSecureDevelopment/frontend/src/components/FormulaireInscription/FormulaireInscription.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { sendUser } from \"../../services/api\";\nimport \"./FormulaireInscription.css\";\n\n//Function to handle user registration and validation\nfunction FormulaireInscription() {\n  const [popup, setPopup] = useState(\"\");\n\n  const [pseudo, setPseudo] = useState(\"\");\n  const [pseudoError, setPseudoError] = useState(\"\");\n\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [passwordConfirmError, setPasswordConfirmError] = useState(\"\");\n  const [passwordSuccess, setPasswordSuccess] = useState(\"\");\n\n  const [mail, setMail] = useState(\"\");\n  const [mailError, setMailError] = useState(\"\");\n\n  const [submitError, setSubmitError] = useState(\"\");\n\n  //Function to reset all components\n  function resetAll() {\n    setPseudo(\"\");\n    setPassword(\"\");\n    setMail(\"\");\n    setPasswordConfirm(\"\");\n    setPasswordSuccess(\"\");\n  }\n\n  //Function to handle username changes\n  function handleChangePseudo(event) {\n    setPseudo(event.target.value);\n    checkPseudo(event.target.value);\n  }\n\n  //Function to handle password changes\n  function handleChangePassword(event) {\n    setPassword(event.target.value);\n    checkPassword(event.target.value);\n  }\n\n  //Function to handle password confirmation changes\n  function handleChangePasswordConfirm(event) {\n    setPasswordConfirm(event.target.value);\n    checkPasswordConfirm(event.target.value);\n  }\n\n  //Function to handle email changes\n  function handleChangeMail(event) {\n    setMail(event.target.value);\n    checkMail(event.target.value);\n  }\n\n  //Check if username is longer than 5 characters\n  const checkPseudo = (value) => {\n    if (value.length < 5) {\n      setPseudoError(\"Username must be longer than 5 characters.\");\n    } else {\n      setPseudoError(\"\");\n    }\n  };\n\n  //Check if password is long enough and contains at least one uppercase letter and one number\n  const checkPassword = (value) => {\n    let error = \"Password must contain:\\n\";\n    setPasswordSuccess(\"\");\n    // To check if the string contains at least one uppercase letter, we convert it to lowercase. If the string hasn't changed, it didn't contain any uppercase letters.\n    let maj = value.toLowerCase() != value;\n    // To check if the string contains at least one lowercase letter, we convert it to uppercase. If the string hasn't changed, it didn't contain any lowercase letters.\n    let min = value.toUpperCase() != value;\n    // To check if the string contains at least one number, we iterate through the string and try to convert each character to an integer. If parseInt() returns NaN (Not a Number), then it's not a digit.\n    let num = false;\n    for (let i = 0; i < value.length; i++) {\n      if (!isNaN(parseInt(value[i]))) num = true;\n    }\n    // To check if the string contains at least one special character, we create a string containing all the special characters we want to check. We then iterate through our password and check if each character is in the special characters string.\n    let caracters = \"!@#$%^&*()_+-=[]{}|;:,.<>?\";\n    let car = false;\n    for (let i = 0; i < value.length; i++) {\n      if (caracters.includes(value[i])) car = true;\n    }\n\n    //If password is less than 9 characters\n    if (value.length < 9) {\n      error += \"-more than 9 characters\\n\";\n    } else {\n      setPasswordError(\"\");\n    }\n    //If password doesn't contain a lowercase letter\n    if (!min) {\n      error += \"-at least one lowercase letter\\n\";\n    } else {\n      setPasswordError(\"\");\n    }\n    //If password doesn't contain an uppercase letter\n    if (!maj) {\n      error += \"-at least one uppercase letter\\n\";\n    } else {\n      setPasswordError(\"\");\n    }\n    //If password doesn't contain at least one number\n    if (!num) {\n      error += \"-at least one number\\n\";\n    } else {\n      setPasswordError(\"\");\n    }\n    //If password doesn't contain at least one special character\n    if (!car) {\n      error += \"-at least one special character\\n\";\n    } else {\n      setPasswordError(\"\");\n    }\n    //If all conditions are met, we update the password\n    if (maj == true && min == true && num == true && car == true) {\n      setPasswordSuccess(\"Strong password\");\n      return setPasswordError(\"\");\n    }\n    //Otherwise, we return the error\n    return setPasswordError(error);\n  };\n\n  //Check if the confirmation password matches the original password\n  const checkPasswordConfirm = (value) => {\n    if (value !== password) {\n      setPasswordConfirmError(\"The entered passwords do not match.\");\n    } else {\n      setPasswordConfirmError(\"\");\n    }\n  };\n\n  //Check if the email is valid\n  const checkMail = (value) => {\n    if (value.length < 5 || !value.includes(\"@\")) {\n      setMailError(\"The email address is not valid.\");\n    } else {\n      setMailError(\"\");\n    }\n  };\n\n  //Register the user\n  function handleInscription() {\n    //If there are no errors\n    if (!mailError && !passwordConfirmError && !passwordError && !pseudoError) {\n      setSubmitError(\"\"); // Reset submission error\n      // Send user data\n      sendUser(mail, password);\n      //Show a popup to indicate successful registration\n      setPopup(true);\n      //Reset sent values\n      resetAll();\n    }\n    //If there are errors, display a message asking to correct them\n    else {\n      setSubmitError(\n        \"Please correct the errors before submitting the form.\"\n      );\n      if (!pseudo) {\n        setPseudoError(\"Username is required.\");\n      }\n      if (!password) {\n        setPasswordError(\"Password is required.\");\n      }\n      if (!passwordConfirm) {\n        setPasswordConfirmError(\"Password confirmation is required.\");\n      }\n      if (!mail) {\n        setMailError(\"Email address is required.\");\n      }\n    }\n  }\n\n  //Close the popup\n  const closePopup = () => {\n    setPopup(false);\n  };\n\n  //Display a form where users can enter their username, password, password confirmation, and email address\n  //along with a submit button\n  //Also includes a popup that appears when the user is successfully registered\n  return (\n    <div className=\"forminscr\">\n      <div>\n        <label htmlFor=\"pseudo\">Username</label>\n        <input\n          type=\"text\"\n          id=\"pseudo\"\n          onChange={handleChangePseudo}\n          value={pseudo}\n        />\n        <span className=\"error\">{pseudoError}</span>\n      </div>\n      <div>\n        <label htmlFor=\"password\">Password</label>\n        <input\n          type=\"password\"\n          id=\"\"\n          onChange={handleChangePassword}\n          value={password}\n        />\n        <span className=\"error\">{passwordError}</span>\n        <span className=\"valid\">{passwordSuccess}</span>\n      </div>\n      <div>\n        <label htmlFor=\"re-password\">Confirm Password</label>\n        <input\n          type=\"password\"\n          id=\"re-password\"\n          onChange={handleChangePasswordConfirm}\n          value={passwordConfirm}\n        />\n        <span className=\"error\">{passwordConfirmError}</span>\n      </div>\n      <div>\n        <label htmlFor=\"mail\">Email</label>\n        <input\n          type=\"email\"\n          id=\"mail\"\n          onChange={handleChangeMail}\n          value={mail}\n        />\n        <span className=\"error\">{mailError}</span>\n      </div>\n      <span className=\"error\">{submitError}</span>\n      <button onClick={handleInscription}>Register</button>\n      {popup && (\n        <div className=\"popup-bg active\">\n          <div className=\"popupDelete\">\n            <p>You are now registered</p>\n            <button className=\"btn-annuler\" onClick={() => closePopup()}>\n              Close\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default FormulaireInscription;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}