{"ast":null,"code":"var _jsxFileName = \"/Users/marinebordenave/Documents/Cours/WebSecureDevelopment/frontend/src/components/NavBar/NavBar.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./NavBar.css\";\nimport BoutonDeconnexion from \"../BoutonDeconnexion/BoutonDeconnexion\";\n\n// Function that displays the pages the user can navigate to based on their login status and role\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Navbar({\n  currentPage,\n  setPage,\n  Admin,\n  parcName\n}) {\n  let is_token_presence = localStorage.getItem(\"token\");\n\n  // We get the different tabs we can navigate to with conditions for certain pages\n  // The conditions are the absence of a token, the presence of a token and whether the user is an administrator\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: parcName != undefined ? parcName : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"test\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: currentPage === \"accueil\" ? \"active\" : \"\",\n          onClick: () => setPage(\"accueil\"),\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: currentPage === \"attraction\" ? \"active\" : \"\",\n          onClick: () => setPage(\"attraction\"),\n          children: \"Attractions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), is_token_presence == null && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: currentPage === \"connexion\" ? \"active\" : \"\",\n            onClick: () => setPage(\"connexion\"),\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: currentPage === \"inscription\" ? \"active\" : \"\",\n            onClick: () => setPage(\"inscription\"),\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), is_token_presence != null && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: currentPage === \"reservation\" ? \"active\" : \"\",\n            onClick: () => setPage(\"reservation\"),\n            children: \"Reservation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: currentPage === \"profil\" ? \"active\" : \"\",\n            onClick: () => setPage(\"profil\"),\n            children: \"My Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), Admin && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: currentPage === \"admin\" ? \"active\" : \"\",\n          onClick: () => setPage(\"admin\"),\n          children: [\"Park\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), \"Management\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), is_token_presence != null && /*#__PURE__*/_jsxDEV(BoutonDeconnexion, {\n          setPage: setPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","useEffect","BoutonDeconnexion","jsxDEV","_jsxDEV","Fragment","_Fragment","Navbar","currentPage","setPage","Admin","parcName","is_token_presence","localStorage","getItem","children","undefined","fileName","_jsxFileName","lineNumber","columnNumber","id","className","onClick","_c","$RefreshReg$"],"sources":["/Users/marinebordenave/Documents/Cours/WebSecureDevelopment/frontend/src/components/NavBar/NavBar.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./NavBar.css\";\nimport BoutonDeconnexion from \"../BoutonDeconnexion/BoutonDeconnexion\";\n\n// Function that displays the pages the user can navigate to based on their login status and role\nfunction Navbar({ currentPage, setPage, Admin, parcName }) {\n  let is_token_presence = localStorage.getItem(\"token\");\n\n  // We get the different tabs we can navigate to with conditions for certain pages\n  // The conditions are the absence of a token, the presence of a token and whether the user is an administrator\n  return (\n    <header>\n      <h3>{parcName != undefined ? parcName : \"\"}</h3>\n      <nav>\n        <div id=\"test\">\n          <p\n            className={currentPage === \"accueil\" ? \"active\" : \"\"}\n            onClick={() => setPage(\"accueil\")}\n          >\n            Home\n          </p>\n          <p\n            className={currentPage === \"attraction\" ? \"active\" : \"\"}\n            onClick={() => setPage(\"attraction\")}\n          >\n            Attractions\n          </p>\n          {is_token_presence == null && (\n            <>\n              <p\n                className={currentPage === \"connexion\" ? \"active\" : \"\"}\n                onClick={() => setPage(\"connexion\")}\n              >\n                Login\n              </p>\n              <p\n                className={currentPage === \"inscription\" ? \"active\" : \"\"}\n                onClick={() => setPage(\"inscription\")}\n              >\n                Register\n              </p>\n            </>\n          )}\n          {is_token_presence != null && (\n            <>\n              <p\n                className={currentPage === \"reservation\" ? \"active\" : \"\"}\n                onClick={() => setPage(\"reservation\")}\n              >\n                Reservation\n              </p>\n              <p\n                className={currentPage === \"profil\" ? \"active\" : \"\"}\n                onClick={() => setPage(\"profil\")}\n              >\n                My Profile\n              </p>\n            </>\n          )}\n          {Admin && (\n            <p\n              className={currentPage === \"admin\" ? \"active\" : \"\"}\n              onClick={() => setPage(\"admin\")}\n            >\n              Park\n              <br />\n              Management{\" \"}\n            </p>\n          )}\n          {is_token_presence != null && <BoutonDeconnexion setPage={setPage} />}\n        </div>\n      </nav>\n    </header>\n  );\n}\n\nexport default Navbar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}