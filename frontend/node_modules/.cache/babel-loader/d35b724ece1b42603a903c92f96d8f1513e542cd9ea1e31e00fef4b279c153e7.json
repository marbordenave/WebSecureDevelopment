{"ast":null,"code":"var _jsxFileName = \"/Users/marinebordenave/Documents/Cours/WebSecureDevelopment/frontend/src/components/FormulaireModiferParc/FormulaireModiferParc.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getMyParc, updateMyParc } from \"../../services/api\";\n// Function to display and allow modification of park information\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FormulaireModiferParc({\n  setParcName\n}) {\n  _s();\n  const [parc, setParc] = useState({\n    nom: \"\",\n    description: \"\"\n  });\n  const [ModifPark, setModifPark] = useState(false);\n  useEffect(() => {\n    // When the component has been rendered, we get the park information\n    getMyParc().then(data => setParc(data));\n  }, []);\n\n  // Function that performs modifications of the name and description fields\n  function handleChange(e) {\n    // Get the park id\n    const id = e.target.id;\n    const value = e.target.value;\n    // Change its information\n    setParc(parc => ({\n      ...parc,\n      [id]: value\n    }));\n    setModifPark(false);\n  }\n\n  // When we click on modify, we launch the function to update the park information\n  function handleUpdate() {\n    // API call\n    updateMyParc(localStorage.getItem(\"token\"), parc.nom, parc.description).catch(error => {\n      console.error(\"An error occurred during the update: \", error);\n    });\n    setParcName(parc.nom);\n    setModifPark(true);\n  }\n\n  // Display a form in which park information is entered and can be modified\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Modify Park Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"formulaire\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"parcname\",\n        children: \"Park Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"nom\",\n        value: parc.nom,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"Description\",\n        children: \"Park Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"3\",\n        cols: \"93\",\n        id: \"description\",\n        value: parc.description,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdate,\n        children: \"Modify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), ModifPark === true && /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"actionValide\",\n        children: \"Park information has been modified\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(FormulaireModiferParc, \"banXXRZQF6Vdpz8/bjZTQHtZUWA=\");\n_c = FormulaireModiferParc;\nexport default FormulaireModiferParc;\nvar _c;\n$RefreshReg$(_c, \"FormulaireModiferParc\");","map":{"version":3,"names":["React","useState","useEffect","getMyParc","updateMyParc","jsxDEV","_jsxDEV","Fragment","_Fragment","FormulaireModiferParc","setParcName","_s","parc","setParc","nom","description","ModifPark","setModifPark","then","data","handleChange","e","id","target","value","handleUpdate","localStorage","getItem","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","onChange","rows","cols","onClick","_c","$RefreshReg$"],"sources":["/Users/marinebordenave/Documents/Cours/WebSecureDevelopment/frontend/src/components/FormulaireModiferParc/FormulaireModiferParc.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { getMyParc, updateMyParc } from \"../../services/api\";\n// Function to display and allow modification of park information\nfunction FormulaireModiferParc({ setParcName }) {\n  const [parc, setParc] = useState({ nom: \"\", description: \"\" });\n  const [ModifPark, setModifPark] = useState(false);\n\n  useEffect(() => {\n    // When the component has been rendered, we get the park information\n    getMyParc().then((data) => setParc(data));\n  }, []);\n\n  // Function that performs modifications of the name and description fields\n  function handleChange(e) {\n    // Get the park id\n    const id = e.target.id;\n    const value = e.target.value;\n    // Change its information\n    setParc((parc) => ({ ...parc, [id]: value }));\n    setModifPark(false);\n  }\n\n  // When we click on modify, we launch the function to update the park information\n  function handleUpdate() {\n    // API call\n    updateMyParc(\n      localStorage.getItem(\"token\"),\n      parc.nom,\n      parc.description\n    ).catch((error) => {\n      console.error(\n        \"An error occurred during the update: \",\n        error\n      );\n    });\n    setParcName(parc.nom);\n    setModifPark(true);\n  }\n\n  // Display a form in which park information is entered and can be modified\n  return (\n    <>\n      <h2>Modify Park Information</h2>\n      <div id=\"formulaire\">\n        <label htmlFor=\"parcname\">Park Name</label>\n        <input type=\"text\" id=\"nom\" value={parc.nom} onChange={handleChange} />\n        <label htmlFor=\"Description\">Park Description</label>\n        <textarea\n          rows=\"3\"\n          cols=\"93\"\n          id=\"description\"\n          value={parc.description}\n          onChange={handleChange}\n        />\n        <button onClick={handleUpdate}>Modify</button>\n        {ModifPark === true && (\n          <p id=\"actionValide\">Park information has been modified</p>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default FormulaireModiferParc;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}